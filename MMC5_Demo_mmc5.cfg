MEMORY {
    ZP:     start = $0000,  size = $0100, type = rw, define = yes;
    OAM:    start = $0200,  size = $0100, type = rw, define = yes;
    RAM:    start = $0300,  size = $0500, type = rw, define = yes;
    PRGRAM0: start = $6000,  size = $2000, type = rw;
    PRGRAM1: start = $6000,  size = $2000, type = rw;
    PRGRAM2: start = $6000,  size = $2000, type = rw;
    PRGRAM3: start = $6000,  size = $2000, type = rw;

    HEADER: start = $0000,  size = $0010, type = ro, file = %O, fill = yes, fillval = $00;
    BNK0:   start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes;
    BNK1:   start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes;
    BNK2:   start = $A000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes;
    BNK3:   start = $A000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes;
    BNK4:   start = $A000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes;
    BNK5:   start = $A000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes;
    BNK6:   start = $A000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes;
    BNK7:   start = $E000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00, define = yes;
    CHR:    start = $0000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $00;
}

SEGMENTS {
    HEADER:   load = HEADER, type = ro;

    LOWCODE:  load = BNK7, type = ro,  define = yes,  start = $E000;
    STARTUP:  load = BNK7, type = ro,  define = yes;
    CODE:     load = BNK7, type = ro,  define = yes;

    BNK0:     load = BNK0, type = ro, optional = yes;
    BNK1:     load = BNK1, type = ro, optional = yes;
    BNK2:     load = BNK2, type = ro, optional = yes;
    BNK3:     load = BNK3, type = ro, optional = yes;
    BNK4:     load = BNK4, type = ro, optional = yes;
    BNK5:     load = BNK5, type = ro, optional = yes;
    BNK6:     load = BNK6, type = ro, optional = yes;
    BNK7:     load = BNK7, type = ro, optional = yes;

    RAM0:     load = PRGRAM0, type = bss, optional = yes;

    VECTORS:  load = BNK7, type = ro,  start = $FFFA;

    OAM:      load = OAM,  type = rw;
    BSS:      load = RAM,  type = bss, define = yes;
    HEAP:     load = RAM,  type = bss, optional = yes;
    ZEROPAGE: load = ZP,   type = zp;

    CHARS:    load = CHR,  type = ro;
}
